name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Unit Tests
      run: |
        pytest tests/

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: your-dockerhub-username/real-estate-prediction:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to AWS ECS
      if: github.ref == 'refs/heads/main'
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ecs-task-def.json
        service: your-ecs-service
        cluster: your-ecs-cluster
        wait-for-service-stability: true
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: your-aws-region

    - name: Deploy to Google Cloud Run
      if: github.ref == 'refs/heads/main'
      run: |
        echo ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }} | base64 --decode > "${HOME}/gcloud-service-key.json"
        gcloud auth activate-service-account --key-file="${HOME}/gcloud-service-key.json"
        gcloud run deploy real-estate-prediction \
          --image gcr.io/your-gcp-project/real-estate-prediction:latest \
          --platform managed \
          --region your-gcp-region \
          --allow-unauthenticated
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

    - name: Deploy to Azure Container Instances
      if: github.ref == 'refs/heads/main'
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az login --service-principal --username ${{ secrets.AZURE_CLIENT_ID }} --password ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az container create \
            --resource-group your-resource-group \
            --name real-estate-prediction \
            --image your-dockerhub-username/real-estate-prediction:latest \
            --dns-name-label your-dns-name \
            --ports 5000
